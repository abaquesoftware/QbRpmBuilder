# DH_TOOLS for REDHAT/CENTOS by VEDICIS
# 
# Tools used to implement 
#
# dch / debchange
# dh_testroot
# dh_prep
# dh_installdirs
# dh_install -X ...
# dh_link
# dh_installdeb
# dh_gencontrol
# dh_builddeb --destdir=...
#

qbrbtools_distribDir="rpm"
[ -e /etc/debian_version ] && qbrbtools_distribDir="debian"

qbrbtools_cacheDir="/var/lib/qbrb-cache"

UNSET_VAR="##_#UNSET#_##"
# This string is used in 'pretrans' to detect if the package have been generated by QbRpmBuilder
qbrbtools_tagLine="# QbRpmBuilder"

# =======================
# DEB PACKAGE
# =======================
#
# -----------------------
# debian/changelog
# -----------------------
# Souce: https://www.debian.org/doc/manuals/maint-guide/dreq.en.html#changelog
# 
# debian/changelog contains the following fields:
# - Package name
# - Package version
# - Maintainer (syntax: "Name <email>")
#
# -----------------------
# debian/control
# -----------------------
# Source: https://www.debian.org/doc/debian-policy/ch-controlfields.html
#    and: https://manpages.debian.org/testing/dpkg-dev/deb-control.5.en.html
# - - - - - - - - - - -
# Binary packages
# - - - - - - - - - - -
# In debian/control mandatory fields are:
#   - Package
#   - Version
# 
# In debian/control recommended fields are:
#   - Architecture (all, amd64, armel, i386, powerpc, ...)
#   - Maintainer (syntax: "Name <email>")
#   - Description
#
# Other fields in debian/control (optionals):
#   - Source
#   - Section (recommended)
#   - Priority (recommended)
#   - Essential
#   - Depends et al
#       . Depends
#       . Pre-Depends
#       . Recommends
#       . Suggests
#       . Enhances
#       . Breaks
#       . Conflicts
#       . Provides
#   - Installed-Size
#   - Homepage (URL)
#   - Built-Using (like 'Maintainer')
#
# - - - - - - - - - - - - - - - - -
# Source packages (NOT SUPPORTED)
# - - - - - - - - - - - - - - - - -
#

# =======================
# RPM PACKAGE
# =======================
# Source: https://rpm-packaging-guide.github.io/
#
# SPEC madatory directives:
# - Name
# - Version
# - Release
# - Summary
# - License
# - URL
# - Source0
# - Patch0
# - BuildArch
# - BuildRequires
# - Requires
# - ExcludeArch
# ... from https://rpm.org/user_doc/dependencies.html
# - Conflicts
# - Provides
# 
# Body items:
#  %description
#  %prep
#  %build
#  %install
#  %check
#  %files
#  %changelog
#  --- pre/post scripts:
#  %pre
#  %post
#  %preun
#  %postun
# 
# Note: More details about %pre/%post/%preun/%postun
#       here: https://docs.fedoraproject.org/en-US/packaging-guidelines/Scriptlets/#_syntax
#

# ----------------------------------------
function Qbrbtools_set_vars_from_files {
# ----------------------------------------
  local file="${qbrbtools_distribDir}/control"
  local debug=0

  # Value variables qbrbtools_co_... from rpm/control
  Qbrbtools_parse_control
  if [ $debug -ne 0 ] ; then
    echo "qbrbtools_co_package=$qbrbtools_co_package"
    echo "qbrbtools_co_version=$qbrbtools_co_version"
    echo "qbrbtools_co_architecture=$qbrbtools_co_architecture"
    echo "qbrbtools_co_maintainer=$qbrbtools_co_maintainer"
    echo "qbrbtools_co_maintainerName=$qbrbtools_co_maintainerName"
    echo "qbrbtools_co_maintainerEmail=$qbrbtools_co_maintainerEmail"
    echo "qbrbtools_co_source=$qbrbtools_co_source"
    echo "qbrbtools_co_depends=$qbrbtools_co_depends"
    echo "qbrbtools_co_predepends=$qbrbtools_co_predepends"
    echo "qbrbtools_co_conflicts=$qbrbtools_co_conflicts"
    echo "qbrbtools_co_provides=$qbrbtools_co_provides"
    echo "qbrbtools_co_homePage=$qbrbtools_co_homePage"
    echo "----------------"
    # Not Used
    # echo "qbrbtools_co_section=$qbrbtools_co_section"
    # echo "qbrbtools_co_priority=$qbrbtools_co_priority"
    # echo "qbrbtools_co_essential=$qbrbtools_co_essential"
    # echo "qbrbtools_co_recommends=$qbrbtools_co_recommends"
    # echo "qbrbtools_co_suggests=$qbrbtools_co_suggests"
    # echo "qbrbtools_co_enhances=$qbrbtools_co_enhances"
    # echo "qbrbtools_co_breaks=$qbrbtools_co_breaks"
    # echo "qbrbtools_co_installedSize=$qbrbtools_co_installedSize"
    # echo "qbrbtools_co_builtUsing=$qbrbtools_co_builtUsing"
  fi

  # Value variables qbrbtools_cl_... from rpm/changeLog
  Qbrbtools_parse_changelog
  if [ $debug -ne 0 ] ; then
    echo "qbrbtools_cl_package=$qbrbtools_cl_package"
    echo "qbrbtools_cl_version=$qbrbtools_cl_version"
    echo "qbrbtools_cl_revision=$qbrbtools_cl_revision"
    echo "qbrbtools_cl_comments=$qbrbtools_cl_comments"
    echo "qbrbtools_cl_maintainer=$qbrbtools_cl_maintainer"
    echo "qbrbtools_cl_maintainerName=$qbrbtools_cl_maintainerName"
    echo "qbrbtools_cl_maintainerEmail=$qbrbtools_cl_maintainerEmail"
    echo "----------------"
  fi

  # Value variables qbevtools_etc_... from /etc/QbRbBuilder/QbRbBuilder.conf
  Qbrbtools_parse_etc_file
  if [ $debug -ne 0 ] ; then
    echo "qbrbtools_etc_name=$qbrbtools_etc_name"
    echo "qbrbtools_etc_version=$qbrbtools_etc_version"
    echo "qbrbtools_etc_release=$qbrbtools_etc_release"
    echo "qbrbtools_etc_summary=$qbrbtools_etc_summary"
    echo "qbrbtools_etc_license=$qbrbtools_etc_license"
    echo "qbrbtools_etc_url=$qbrbtools_etc_url"
    echo "qbrbtools_etc_source0=$qbrbtools_etc_source0"
    echo "qbrbtools_etc_noSource=$qbrbtools_etc_noSource"
    echo "qbrbtools_etc_patch0=$qbrbtools_etc_patch0"
    echo "qbrbtools_etc_buildArch=$qbrbtools_etc_buildArch"
    echo "qbrbtools_etc_excludeArch=$qbrbtools_etc_excludeArch"
    echo "qbrbtools_etc_buildRequires=$qbrbtools_etc_buildRequires"
    echo "qbrbtools_etc_requires=$qbrbtools_etc_requires"
    echo "qbrbtools_etc_conflicts=$qbrbtools_etc_conflicts"
    echo "qbrbtools_etc_provides=$qbrbtools_etc_provides"
    echo "----------------"
  fi

  # Value variables qbevtools_ev_... from environment variables
  Qbrbtools_parse_environment_variables
  if [ $debug -ne 0 ] ; then
    echo "qbrbtools_ev_name=$qbrbtools_ev_name"
    echo "qbrbtools_ev_version=$qbrbtools_ev_version"
    echo "qbrbtools_ev_release=$qbrbtools_ev_release"
    echo "qbrbtools_ev_architecture=$qbrbtools_ev_architecture"
    echo "qbrbtools_ev_summary=$qbrbtools_ev_summary"
    echo "qbrbtools_ev_license=$qbrbtools_ev_license"
    echo "qbrbtools_ev_url=$qbrbtools_ev_url"
    echo "qbrbtools_ev_source0=$qbrbtools_ev_source0"
    echo "qbrbtools_ev_noSource=$qbrbtools_ev_noSource"
    echo "qbrbtools_ev_patch0=$qbrbtools_ev_patch0"
    echo "qbrbtools_ev_buildArch=$qbrbtools_ev_buildArch"
    echo "qbrbtools_ev_excludeArch=$qbrbtools_ev_excludeArch"
    echo "qbrbtools_ev_buildRequires=$qbrbtools_ev_buildRequires"
    echo "qbrbtools_ev_requires=$qbrbtools_ev_requires"
    echo "qbrbtools_ev_conflicts=$qbrbtools_ev_conflicts"
    echo "qbrbtools_ev_provides=$qbrbtools_ev_provides"
    echo "----------------"
  fi

  qbrbtools_co_requiredPackages=""
  [ "${qbrbtools_co_predepends}" != "${UNSET_VAR}" ] && qbrbtools_co_requiredPackages+="${qbrbtools_co_predepends}"
  [ "${qbrbtools_co_depends}" != "${UNSET_VAR}" ] && qbrbtools_co_requiredPackages+="${qbrbtools_co_depends}"
  [ -z "${qbrbtools_co_requiredPackages}" ] && qbrbtools_co_requiredPackages="${UNSET_VAR}"
  
  qbrbtools_name="$( Qbrbtools_find_first_value "qbrbtools_ev_name qbrbtools_co_package qbrbtools_cl_package qbrbtools_etc_name" )"
  qbrbtools_version="$( Qbrbtools_find_first_value "qbrbtools_ev_version qbrbtools_co_version qbrbtools_cl_version qbrbtools_etc_version" )"
  qbrbtools_release="$( Qbrbtools_find_first_value "qbrbtools_ev_release qbrbtools_co_revision qbrbtools_cl_revision qbrbtools_etc_release" )"  
  [ -z "${qbrbtools_release}" ] && qbrbtools_release="0"
  qbrbtools_architecture="$( Qbrbtools_find_first_value "qbrbtools_ev_architecture qbrbtools_co_architecture" )"
  qbrbtools_summary="$( Qbrbtools_find_first_value "qbrbtools_ev_summary qbrbtools_co_description qbrbtools_etc_summary" )"
  qbrbtools_group="$( Qbrbtools_find_first_value "qbrbtools_ev_group qbrbtools_etc_group" )"
  qbrbtools_license="$( Qbrbtools_find_first_value "qbrbtools_ev_license qbrbtools_etc_license" )"
  qbrbtools_copyright="$( Qbrbtools_find_first_value "qbrbtools_ev_copyright qbrbtools_etc_copyright" )"
  qbrbtools_vendor="$( Qbrbtools_find_first_value "qbrbtools_ev_vendor qbrbtools_etc_vendor" )"
  qbrbtools_url="$( Qbrbtools_find_first_value "qbrbtools_ev_url qbrbtools_co_homePage qbrbtools_etc_url" )"
  qbrbtools_source0="$( Qbrbtools_find_first_value "qbrbtools_ev_source0 qbrbtools_co_source qbrbtools_etc_source0" )"
  qbrbtools_noSource="$( Qbrbtools_find_first_value "qbrbtools_ev_noSource qbrbtools_etc_noSource" )"
  qbrbtools_patch0="$( Qbrbtools_find_first_value "qbrbtools_ev_patch0 qbrbtools_etc_patch0" )"
  qbrbtools_buildArch="$( Qbrbtools_find_first_value "qbrbtools_ev_buildArch qbrbtools_co_architecture qbrbtools_etc_buildArch" )"
  qbrbtools_excludeArch="$( Qbrbtools_find_first_value "qbrbtools_ev_excludeArch qbrbtools_etc_excludeArch" )"
  qbrbtools_buildRequires="$( Qbrbtools_find_first_value "qbrbtools_ev_buildRequires qbrbtools_etc_buildRequires" )"
  qbrbtools_buildRoot="$( Qbrbtools_find_first_value "qbrbtools_ev_buildRoot qbrbtools_etc_buildRoot" )"
  qbrbtools_requires="$( Qbrbtools_find_first_value "qbrbtools_ev_requires qbrbtools_co_requiredPackages qbrbtools_etc_requires" )"
  qbrbtools_conflicts="$( Qbrbtools_find_first_value "qbrbtools_ev_conflicts qbrbtools_co_conflicts qbrbtools_etc_conflicts" )"
  qbrbtools_provides="$( Qbrbtools_find_first_value "qbrbtools_ev_provides qbrbtools_co_provides qbrbtools_etc_provides" )"
  qbrbtools_maintainer="$( Qbrbtools_find_first_value "qbrbtools_co_maintainer qbrbtools_cl_maintainer" )"
  if [ $debug -ne 0 ] ; then
    echo "qbrbtools_name=$qbrbtools_name"
    echo "qbrbtools_version=$qbrbtools_version"
    echo "qbrbtools_release=$qbrbtools_release"
    echo "qbrbtools_summary=$qbrbtools_summary"
    echo "qbrbtools_license=$qbrbtools_license"
    echo "qbrbtools_url=$qbrbtools_url"
    echo "qbrbtools_source0=$qbrbtools_source0"
    echo "qbrbtools_patch0=$qbrbtools_patch0"
    echo "qbrbtools_buildArch=$qbrbtools_buildArch"
    echo "qbrbtools_excludeArch=$qbrbtools_excludeArch"
    echo "qbrbtools_buildRequires=$qbrbtools_buildRequires"
    echo "qbrbtools_requires=$qbrbtools_requires"
    echo "qbrbtools_conflicts=$qbrbtools_conflicts"
    echo "qbrbtools_provides=$qbrbtools_provides"
    echo "qbrbtools_maintainer=$qbrbtools_maitainer"
    echo "----------------"
  fi

  qbrbtools_packageName="${qbrbtools_name}"
  qbrbtools_packageVersion="${qbrbtools_version}"
  qbrbtools_packageRevision="${qbrbtools_release}"

  qbrbtools_packageFullVersion="${qbrbtools_packageVersion}"
  [ -n "${qbrbtools_packageRevision}" ] && qbrbtools_packageFullVersion+="-${qbrbtools_packageRevision}"

  qbrbtools_packageFullName="${qbrbtools_packageName}"
  [ -n "${qbrbtools_packageFullVersion}"  ] && qbrbtools_packageFullName+="-${qbrbtools_packageFullVersion}"
}

# ----------------------------------------
function Qbrbtools_parse_control {
# ----------------------------------------
  local file="${qbrbtools_distribDir}/control"
  local fileContent=$( cat "$file" )

  qbrbtools_co_package="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Package"       ":" )"
  qbrbtools_co_version="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Version"       ":" )"
  qbrbtools_co_architecture="$(  Qbrbtools_get_conf_parameter "${fileContent}" "Architecture"  ":" )"
  qbrbtools_co_maintainer="$(    Qbrbtools_get_conf_parameter "${fileContent}" "Maintainer"    ":" )"
  qbrbtools_co_source="$(        Qbrbtools_get_conf_parameter "${fileContent}" "Source"        ":" )"
  qbrbtools_co_description="$(   Qbrbtools_get_conf_parameter "${fileContent}" "Description"   ":" )"
  qbrbtools_co_depends="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Depends"       ":" )"
  qbrbtools_co_predepends="$(    Qbrbtools_get_conf_parameter "${fileContent}" "Predepends"    ":" )"
  qbrbtools_co_suggests="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Suggests"      ":" )"
  qbrbtools_co_conflicts="$(     Qbrbtools_get_conf_parameter "${fileContent}" "Conflicts"     ":" )"
  qbrbtools_co_provides="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Provides"      ":" )"
  qbrbtools_co_homePage="$(      Qbrbtools_get_conf_parameter "${fileContent}" "HomePage"      ":" )"

  # split Version
  qbrbtools_co_revision="${UNSET_VAR}"
  [ "${qbrbtools_co_version}" != "${UNSET_VAR}" ] && qbrbtools_co_revision=""
  local HAS_REVISION=$( echo "${qbrbtools_co_version}" | grep -c -- '-' )
  if [ ${HAS_REVISION} -ne 0 ] ; then
    local tmp="${qbrbtools_co_version}"
    qbrbtools_co_version="$(  echo "${tmp}" | cut -d'-' -f1 )"
    qbrbtools_co_revision="$(  echo "${tmp:$(( ${#qbrbtools_co_version} + 1 ))}" | sed 's/-/_/g' )"
  fi

  # split Maintainer
  local HAS_EMAIL=$( echo "${qbrbtools_co_maintainer}" | grep -c '<' )
  if [ $HAS_EMAIL -ne 0 ] ; then
     qbrbtools_co_maintainerName="$( echo "${qbrbtools_co_maintainer}" | sed 's/\(.*\)<.*/\1/' | sed "s/^[ |\\t]\+//" | sed "s/[ |\\t]\+$//" )"
     qbrbtools_co_maintainerEmail="$( echo "${qbrbtools_co_maintainer}" | sed 's/.*<\(.*\)>.*/\1/' )"
  else
     qbrbtools_co_maintainerName="${qbrbtools_co_maintainer}"
  fi

  # Convert Architecture
  [ "${qbrbtools_co_architecture}" = "any"     ] && qbrbtools_co_architecture="noarch"
  [ "${qbrbtools_co_architecture}" = "all"     ] && qbrbtools_co_architecture="noarch"
  [ "${qbrbtools_co_architecture}" = "amd64"   ] && qbrbtools_co_architecture="x86_64"

  # Not used
  # qbrbtools_co_priority="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Priority"      ":" )"
  # qbrbtools_co_section="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Section"       ":" )"
  # qbrbtools_co_essential="$(     Qbrbtools_get_conf_parameter "${fileContent}" "Essential"     ":" )"
  # qbrbtools_co_buildUsing="$(    Qbrbtools_get_conf_parameter "${fileContent}" "BuildUsing"    ":" )"
  # qbrbtools_co_installedSize="$( Qbrbtools_get_conf_parameter "${fileContent}" "InstalledSize" ":" )"
  # qbrbtools_co_breaks="$(        Qbrbtools_get_conf_parameter "${fileContent}" "Breaks"        ":" )"
  # qbrbtools_co_recommends="$(    Qbrbtools_get_conf_parameter "${fileContent}" "Recommends"    ":" )"
  # qbrbtools_co_enhances="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Enhances"      ":" )"

}

# ----------------------------------------
function Qbrbtools_parse_etc_file {
# ----------------------------------------
  local file="/etc/QbRpmBuilder/QbRpmBuilder.conf"
  local fileContent=""
  [ -r "$file" ] && fileContent="$( cat "$file" )"

  qbrbtools_etc_name="$(          Qbrbtools_get_conf_parameter "${fileContent}" "Name"          "=" )"
  qbrbtools_etc_version="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Version"       "=" )"
  qbrbtools_etc_release="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Release"       "=" )"
  qbrbtools_etc_summary="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Summary"       "=" )"
  qbrbtools_etc_group="$(         Qbrbtools_get_conf_parameter "${fileContent}" "Group"         "=" )"
  qbrbtools_etc_license="$(       Qbrbtools_get_conf_parameter "${fileContent}" "License"       "=" )"
  qbrbtools_etc_copyright="$(     Qbrbtools_get_conf_parameter "${fileContent}" "Copyright"     "=" )"
  qbrbtools_etc_vendor="$(        Qbrbtools_get_conf_parameter "${fileContent}" "Vendor"        "=" )"
  qbrbtools_etc_url="$(           Qbrbtools_get_conf_parameter "${fileContent}" "Url"           "=" )"  
  qbrbtools_etc_source0="$(       Qbrbtools_get_conf_parameter "${fileContent}" "Source0"       "=" )"
  qbrbtools_etc_noSource="$(      Qbrbtools_get_conf_parameter "${fileContent}" "NoSource"      "=" )"
  qbrbtools_etc_patch0="$(        Qbrbtools_get_conf_parameter "${fileContent}" "Patch0"        "=" )"
  qbrbtools_etc_buildRoot="$(     Qbrbtools_get_conf_parameter "${fileContent}" "BuildRoot"     "=" )"
  qbrbtools_etc_buildArch="$(     Qbrbtools_get_conf_parameter "${fileContent}" "BuildArch"     "=" )"
  qbrbtools_etc_buildRequires="$( Qbrbtools_get_conf_parameter "${fileContent}" "BuildRequires" "=" )"
  qbrbtools_etc_requires="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Requires"      "=" )"
  qbrbtools_etc_excludeArch="$(   Qbrbtools_get_conf_parameter "${fileContent}" "ExcludeArch"   "=" )"
  qbrbtools_etc_conflicts="$(     Qbrbtools_get_conf_parameter "${fileContent}" "Conflicts"     "=" )"
  qbrbtools_etc_provides="$(      Qbrbtools_get_conf_parameter "${fileContent}" "Provides"      "=" )"
}

# ----------------------------------------
function Qbrbtools_parse_environment_variables {
# ----------------------------------------
  # - Name
  # - Version
  # - Release
  # - Summary
  # - License
  # - URL
  # - Source0
  # - Patch0
  # - BuildArch
  # - BuildRequires
  # - Requires
  # - ExcludeArch
  # ... from https://rpm.org/user_doc/dependencies.html
  # - Conflicts
  # - Provides

  local fileContent="$(env)"

  qbrbtools_ev_name="$(          Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_NAME"          "=" )"
  qbrbtools_ev_version="$(       Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_VERSION"       "=" )"
  qbrbtools_ev_release="$(       Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_RELEASE"       "=" )"
  qbrbtools_ev_architecture="$(  Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_ARCHITECTURE"  "=" )"
  qbrbtools_ev_summary="$(       Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_SUMMARY"       "=" )"
  qbrbtools_ev_group="$(         Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_GROUP"         "=" )"
  qbrbtools_ev_license="$(       Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_LICENSE"       "=" )"
  qbrbtools_ev_copyright="$(     Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_COPYRIGHT"     "=" )"
  qbrbtools_ev_vendor="$(        Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_VENDOR"        "=" )"
  qbrbtools_ev_url="$(           Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_URL"           "=" )"
  qbrbtools_ev_source0="$(       Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_SOURCE0"       "=" )"
  qbrbtools_ev_noSource="$(      Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_NOSOURCE"      "=" )"
  qbrbtools_ev_patch0="$(        Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_PATCH0"        "=" )"
  qbrbtools_ev_buildRoot="$(     Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_BUILDROOT"     "=" )"
  qbrbtools_ev_buildArch="$(     Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_BUILDARCH"     "=" )"
  qbrbtools_ev_buildRequires="$( Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_BUILDREQUIRES" "=" )"
  qbrbtools_ev_requires="$(      Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_REQUIRES"      "=" )"
  qbrbtools_ev_excludeArch="$(   Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_EXCLUDEARCH"   "=" )"
  qbrbtools_ev_conflicts="$(     Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_CONFLICTS"     "=" )"
  qbrbtools_ev_provides="$(      Qbrbtools_get_conf_parameter "${fileContent}" "RPMBUILD_PROVIDES"      "=" )" 
}

# ----------------------------------------
function Qbrbtools_parse_changelog {
# ----------------------------------------
  local file="${qbrbtools_distribDir}/changelog"
  local fileContent=$( cat "$file" )

  qbrbtools_cl_package=$( echo "${fileContent}" | head -n 1 | awk '{print $1}' )
  qbrbtools_cl_version=$( echo "${fileContent}" | head -n 1 | awk '{print $2}' | sed 's/(//' | sed 's/)//' )
  qbrbtools_cl_maintainer="$( echo "${fileContent}" | grep "^ -- " | head -n1 | sed 's/^ -- //' | cut -d'>' -f1 )>"
  qbrbtools_cl_comment=$(     echo "${fileContent}" | grep "^  \*" | head -n1 | sed 's/^  \*[ ]*//' )

  # split Version
  qbrbtools_cl_revision="${UNSET_VAR}"
  [ "${qbrbtools_cl_version}" != "${UNSET_VAR}" ] && qbrbtools_cl_revision=""
  local HAS_REVISION=$( echo "${qbrbtools_cl_version}" | grep -c -- '-' )
  if [ ${HAS_REVISION} -ne 0 ] ; then
    local tmp="${qbrbtools_cl_version}"
    qbrbtools_cl_version="$(  echo "${tmp}" | cut -d'-' -f1 )"
    qbrbtools_cl_revision="$(  echo "${tmp:$(( ${#qbrbtools_cl_version} + 1 ))}" | sed 's/-/_/g' )"
  fi

  # split Maintainer
  local HAS_EMAIL=$( echo "${qbrbtools_cl_maintainer}" | grep -c '<' )
  if [ $HAS_EMAIL -ne 0 ] ; then
     qbrbtools_cl_maintainerName="$( echo "${qbrbtools_cl_maintainer}" | sed 's/\(.*\)<.*/\1/' | sed "s/^[ |\\t]\+//" | sed "s/[ |\\t]\+$//" )"
     qbrbtools_cl_maintainerEmail="$( echo "${qbrbtools_cl_maintainer}" | sed 's/.*<\(.*\)>.*/\1/' )"
  else
     qbrbtools_cl_maintainerName="${qbrbtools_cl_maintainer}"
  fi
}

# Usage : Qbrbtools_get_config_file <package-name> <file extension (dirs, install, links, ...)>
# ----------------------------------------
function Qbrbtools_get_config_file
# ----------------------------------------
{
  local qbrbtools_packageName="$1"
  local qbrbtools_fileExtension="$2"

  local result=""
  case1="${qbrbtools_distribDir}/${qbrbtools_fileExtension}"
  case2="${qbrbtools_distribDir}/${qbrbtools_packageName}.${qbrbtools_fileExtension}"
  case3="${qbrbtools_distribDir}/${qbrbtools_packageName}/BUILD/${qbrbtools_fileExtension}"
  [ -f "${case1}" ] && result="${case1}"
  [ -f "${case2}" ] && result="${case2}"
  [ -f "${case3}" ] && result="${case3}"
  echo "${result}" 
}

# ----------------------------------------
function Qbrbtools_get_temp_filename {
# ----------------------------------------
  local result="/tmp/$( date '+%s.%N' )-$( printf '%05d' $RANDOM )-$( printf '%05d' $RANDOM ).tmp"
  echo "${result}"
}

# Usage: Qbrbtools_get_conf_parameter <file> <param> <separator> <default-value>
# ----------------------------------------
function Qbrbtools_get_conf_parameter {
# ----------------------------------------
  local fileContent="$1"
  local paramName="$2"
  local separator="$3"
  local result="$(echo "${fileContent}" | grep -i -P "^[ |\t]*${paramName}[ |\\t]*${separator}" | head -n 1 )"
  if [ -n "${result}" ] ; then
    # remove parameter name
    result="$( echo "${result}" | sed "s/^[^${separator}]*${separator}//" )"
    # remove trailing spaces/tabs
    result="$( echo "${result}" | sed "s/^[ |\\t]\+//" | sed "s/[ |\\t]\+$//" )"
  else
    result="${UNSET_VAR}"
  fi
  echo "${result}"
}

# ----------------------------------------
function Qbrbtools_find_first_value {
# ----------------------------------------
  local varList="$1"
  local result=""
  local resultFound=0

  # echo "xxxxxxx - varList = $varList" 1>&2
  # echo "xxxxxxx - result = $result" 1>&2

  for varName in ${varList}
  do
    if [ ${resultFound} -eq 0 ] ; then
      local varValue=${!varName}
      if [ "${varValue}" != "${UNSET_VAR}" ] ; then
        result="${varValue}"
        resultFound=1
      fi
    fi
  done
  # echo "xxxxxxx - result = $result" 1>&2
  # echo "xxxxxxx - -----------------------" 1>&2
  echo "$result"
}

# Syntax Qbrbtools_file_call <script-file-name> <param1> <param2>
# ----------------------------------------
function Qbrbtools_file_call {
# ----------------------------------------
  local fileName="$1"
  local param1="$2"
  local param2="$3"
  local firstLine="$4"


  cat <<EOF >> /dev/stdout
if [ -f "${fileName}" ] ; then
  tmpFile="/tmp/$( date '+%s.%N' )-$( printf '%05d' $RANDOM )-$( printf '%05d' $RANDOM ).tmp"
  rm -f "\${tmpFile}"
  touch "\${tmpFile}"
  chmod 755 "\${tmpFile}"
  shebang="\$( head -n1 "${fileName}" )"
  if [ "\${shebang:0:2}" = "#!" ] ; then
    echo "\${shebang}" > "\${tmpFile}"
  else
    echo "#!/bin/sh" > "\${tmpFile}"
  fi
  echo "" >> "\${tmpFile}"
  echo "${firstLine}" >> "\${tmpFile}"
  echo "_qbrb_percent=\$'\x25'" >> "\${tmpFile}"
  cat "${fileName}" >> "\${tmpFile}"

  _qbrb_percent=\$'\x25'
  MYTTY=\$( ps -h -o "\${_qbrb_percent}y" -p \$\$ )
  if [ -e "/dev/\$MYTTY" ] ; then
    "\${tmpFile}" "${param1}" "${param2}" < /dev/\$MYTTY
    RC=\$?
  else
    "\${tmpFile}" "${param1}" "${param2}"
    RC=\$?
  fi
  rm -f "\${tmpFile}"
  [ \$RC -ne 0 ] && exit 1
fi
EOF
}

# ----------------------------------------
function Qbrbtools_file_copy {
# ----------------------------------------
  local packageName="$1"
  local scriptExtension="$2"
  local cacheFileName="$3"

  local scriptFileName="$( Qbrbtools_get_config_file "${packageName}" "${scriptExtension}" )"

  if [ -n "${scriptFileName}" ] ; then
    # tmpFilename1 = qbrbtools_scriptFileName with no special chars (and no '%')
    local tmpFilename="$(Qbrbtools_get_temp_filename)"
    cp "${scriptFileName}" "${tmpFilename}"
    sed -i 's#\([\\$`]\)#\\\1#g' "${tmpFilename}"
    sed -i 's#%#<{o/o}>#g' "${tmpFilename}"

    echo "cat <<EOFSCRIPT > \"${cacheFileName}\""
    cat "${tmpFilename}"
    echo "EOFSCRIPT"
    echo "sed -i 's#<{o/o}>#%#g' \"${cacheFileName}\""
    echo "chmod 755 \"${cacheFileName}\""
    echo ""
    rm -f "${tmpFilename}"
  fi
}

# ----------------------------------------
function Qbrbtools_function_readPackageScriptlet {
# ----------------------------------------
  cat <<EOF >> /dev/stdout
# ----------------------------------------
function read_package_scriptlet {
# ----------------------------------------
  local packageName="\$1"
  local scriptletName="\$2"

  local result=""
  rpm -qi "\$packageName" > /dev/null 2>&1
  if [ \$? -eq 0 ] ; then
    # Note in pattern, script-let is wrapped because grep 'script-let...' is used to split the file
    local pattern1="scrip"
    pattern1+="tlet (using "
    local pattern2="^\${scriptletName} \${pattern1}"
    local allScriptlets="\$(rpm -q --scripts "\${packageName}")"
    local scriptletExists=\$( echo "\${allScriptlets}" | grep -c "\${pattern2}" )
    if [ \${scriptletExists} -ne 0 ]; then
      local commandLine=\$( echo "\${allScriptlets}" | grep "\${pattern2}" | head -n 1 | sed "s/\${pattern2}\(.*\)).*/\1/" ) 
      local firstLine=\$( echo "\${allScriptlets}" | grep -n "\${pattern2}" | cut -d':' -f1 | head -n 1 )
      local lastLine=0
      for lineIndex in \$( echo "\${allScriptlets}" | grep -n "\${pattern1}" | cut -d':' -f1 )
      do
        [ \${lastLine} -eq 0 -a \${lineIndex} -gt \${firstLine} ] && lastLine=\$(( \${lineIndex} - 1 ))
      done
      [ \${lastLine} -eq 0 ] && lastLine=\$( echo "\${allScriptlets}" | grep -c '^' )
      echo "#!\${commandLine}"
      result="\$( echo "\${allScriptlets}" | head -n \${lastLine} | tail -n \$(( \${lastLine} - \${firstLine} )) )"
    fi
  fi
  echo "\${result}"
}
EOF
}

# warning: this function must be called after Qbrbtools_unction_readPackageScriptlet
# ----------------------------------------
function Qbrbtools_store_scriptlet {
# ----------------------------------------
  local packageName="$1"
  local scripletName="$2"
  local targetFile="$3"

  cat <<EOF >> /dev/stdout
echo "#!/usr/bin/env bash" > "${targetFile}"
echo "QBRB_CACHE_PREFIX='old'" >> "${targetFile}"
read_package_scriptlet "${packageName}" "pretrans" >> "${targetFile}"
chmod 755 "${targetFile}"
EOF
}

# ----------------------------------------
function Qbrbtools_post {
# ----------------------------------------
  local packageName="$1"
  local packageFullVersion="$2"

  cat <<EOF >> /dev/stdout

rm -f "${qbrbtools_cacheDir}/${packageName}.version"
rm -f "${qbrbtools_cacheDir}/${packageName}.preinst"
rm -f "${qbrbtools_cacheDir}/${packageName}.postinst"
rm -f "${qbrbtools_cacheDir}/${packageName}.prerm"
rm -f "${qbrbtools_cacheDir}/${packageName}.postrm"
echo "${packageFullVersion}" > "${qbrbtools_cacheDir}/${packageName}.new-version"
[ -f "${qbrbtools_cacheDir}/${packageName}.new-version"  ] && mv "${qbrbtools_cacheDir}/${packageName}.new-version"  "${qbrbtools_cacheDir}/${packageName}.version"
[ -f "${qbrbtools_cacheDir}/${packageName}.new-preinst"  ] && mv "${qbrbtools_cacheDir}/${packageName}.new-preinst"  "${qbrbtools_cacheDir}/${packageName}.preinst"
[ -f "${qbrbtools_cacheDir}/${packageName}.new-postinst" ] && mv "${qbrbtools_cacheDir}/${packageName}.new-postinst" "${qbrbtools_cacheDir}/${packageName}.postinst"
[ -f "${qbrbtools_cacheDir}/${packageName}.new-prerm"    ] && mv "${qbrbtools_cacheDir}/${packageName}.new-prerm"    "${qbrbtools_cacheDir}/${packageName}.prerm"
[ -f "${qbrbtools_cacheDir}/${packageName}.new-postrm"   ] && mv "${qbrbtools_cacheDir}/${packageName}.new-postrm"   "${qbrbtools_cacheDir}/${packageName}.postrm"
# clean-up
rm -f "${qbrbtools_cacheDir}/${packageName}.old-"*
rm -f "${qbrbtools_cacheDir}/${packageName}.new-"*
EOF
}
